<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="_l_c_d_menu_8c" kind="file" language="C++">
    <compoundname>LCDMenu.c</compoundname>
    <includes local="yes">main.h</includes>
    <includes refid="_l_c_d_menu_settings_8h" local="yes">LCDMenuSettings.h</includes>
    <incdepgraph>
      <node id="5">
        <label>src/LCDMenu.c</label>
        <link refid="_l_c_d_menu_8c"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>main.h</label>
      </node>
      <node id="7">
        <label>LCDMenuSettings.h</label>
        <link refid="_l_c_d_menu_settings_8h"/>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_l_c_d_menu_8c_1ad8e669786e82f68cebcd456c638cfc14" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t numOfItems</definition>
        <argsstring></argsstring>
        <name>numOfItems</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LCDMenu.c" line="4" column="1" bodyfile="src/LCDMenu.c" bodystart="4" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_l_c_d_menu_8c_1a80833d02472394167834348533679f97" prot="public" static="no" mutable="no">
        <type><ref refid="struct_l_c_d_item" kindref="compound">LCDItem</ref> *</type>
        <definition>LCDItem* LCDMenuItems</definition>
        <argsstring></argsstring>
        <name>LCDMenuItems</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LCDMenu.c" line="5" column="1" bodyfile="src/LCDMenu.c" bodystart="5" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_l_c_d_menu_8c_1a0e589f9054cc1ee0716a7ecda74b1352" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int currentSelection</definition>
        <argsstring></argsstring>
        <name>currentSelection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LCDMenu.c" line="6" column="1" bodyfile="src/LCDMenu.c" bodystart="6" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_l_c_d_menu_8c_1ae9f8e66da4e3357d519b755382d55c0d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int potSelectionSize</definition>
        <argsstring></argsstring>
        <name>potSelectionSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LCDMenu.c" line="10" column="1" bodyfile="src/LCDMenu.c" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_l_c_d_menu_8c_1a3b97dc91b74de0462b8192c4e0838afb" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int selectionRangeUpper</definition>
        <argsstring></argsstring>
        <name>selectionRangeUpper</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LCDMenu.c" line="11" column="1" bodyfile="src/LCDMenu.c" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_l_c_d_menu_8c_1a150b832a40f6314f42b950b648def568" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int selectionRangeLower</definition>
        <argsstring></argsstring>
        <name>selectionRangeLower</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LCDMenu.c" line="12" column="1" bodyfile="src/LCDMenu.c" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_l_c_d_menu_8c_1ae18acacf43740d59484a1c156e4d819e" prot="public" static="no" mutable="no">
        <type>sensor</type>
        <definition>sensor selectionPot</definition>
        <argsstring></argsstring>
        <name>selectionPot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LCDMenu.c" line="13" column="1" bodyfile="src/LCDMenu.c" bodystart="13" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_l_c_d_menu_8c_1ad1ba3d01ddd8d4bf88821b64cf8a8738" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void LCDMenuTask</definition>
        <argsstring>(void *ignore)</argsstring>
        <name>LCDMenuTask</name>
        <param>
          <type>void *</type>
          <declname>ignore</declname>
        </param>
        <briefdescription>
<para>this should be started as a task in initialize. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LCDMenu.c" line="15" column="1" bodyfile="src/LCDMenu.c" bodystart="15" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="_l_c_d_menu_8c_1aefa12ea894cc2907d17b17613b9b7165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void newItem</definition>
        <argsstring>(char *itemText, void(*itemFunction)())</argsstring>
        <name>newItem</name>
        <param>
          <type>char *</type>
          <declname>itemText</declname>
        </param>
        <param>
          <type>void(*)()</type>
          <declname>itemFunction</declname>
        </param>
        <briefdescription>
<para>adds an item to the menu </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/LCDMenu.c" line="62" column="1" bodyfile="src/LCDMenu.c" bodystart="62" bodyend="69"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;main.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_l_c_d_menu_settings_8h" kindref="compound">LCDMenuSettings.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_menu_8c_1ad8e669786e82f68cebcd456c638cfc14" kindref="member">numOfItems</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="struct_l_c_d_item" kindref="compound">LCDItem</ref><sp/>*<ref refid="_l_c_d_menu_8c_1a80833d02472394167834348533679f97" kindref="member">LCDMenuItems</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_menu_8c_1a0e589f9054cc1ee0716a7ecda74b1352" kindref="member">currentSelection</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//divides<sp/>all<sp/>possible<sp/>potentiometer<sp/>values<sp/>between<sp/>all<sp/>the<sp/>items<sp/>so<sp/>that<sp/>all</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//items<sp/>have<sp/>an<sp/>equal<sp/>size<sp/>range<sp/>of<sp/>values<sp/>where<sp/>they&apos;re<sp/>selected.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_menu_8c_1ae9f8e66da4e3357d519b755382d55c0d" kindref="member">potSelectionSize</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_menu_8c_1a3b97dc91b74de0462b8192c4e0838afb" kindref="member">selectionRangeUpper</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_menu_8c_1a150b832a40f6314f42b950b648def568" kindref="member">selectionRangeLower</ref>;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">sensor<sp/><ref refid="_l_c_d_menu_8c_1ae18acacf43740d59484a1c156e4d819e" kindref="member">selectionPot</ref>;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_menu_8c_1ad1ba3d01ddd8d4bf88821b64cf8a8738" kindref="member">LCDMenuTask</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ignore)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="_l_c_d_menu_8c_1ad8e669786e82f68cebcd456c638cfc14" kindref="member">numOfItems</ref>)</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_l_c_d_menu_8c_1a3b97dc91b74de0462b8192c4e0838afb" kindref="member">selectionRangeUpper</ref><sp/>=<sp/><ref refid="_l_c_d_menu_8c_1ae9f8e66da4e3357d519b755382d55c0d" kindref="member">potSelectionSize</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_l_c_d_menu_8c_1a150b832a40f6314f42b950b648def568" kindref="member">selectionRangeLower</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//loop<sp/>through<sp/>all<sp/>the<sp/>items<sp/>to<sp/>decide<sp/>what<sp/>should<sp/>be<sp/>displayed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="_l_c_d_menu_8c_1ad8e669786e82f68cebcd456c638cfc14" kindref="member">numOfItems</ref>;<sp/>i++)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>potentiometer<sp/>is<sp/>within<sp/>the<sp/>selection<sp/>range<sp/>of<sp/>item<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(getSensor(<ref refid="_l_c_d_menu_8c_1ae18acacf43740d59484a1c156e4d819e" kindref="member">selectionPot</ref>)<sp/>&gt;=<sp/><ref refid="_l_c_d_menu_8c_1a150b832a40f6314f42b950b648def568" kindref="member">selectionRangeLower</ref><sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getSensor(<ref refid="_l_c_d_menu_8c_1ae18acacf43740d59484a1c156e4d819e" kindref="member">selectionPot</ref>)<sp/>&lt;=<sp/><ref refid="_l_c_d_menu_8c_1a3b97dc91b74de0462b8192c4e0838afb" kindref="member">selectionRangeUpper</ref>)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//change<sp/>the<sp/>current<sp/>selection<sp/>to<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_l_c_d_menu_8c_1a0e589f9054cc1ee0716a7ecda74b1352" kindref="member">currentSelection</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//display<sp/>the<sp/>selection<sp/>on<sp/>line<sp/>1<sp/>of<sp/>the<sp/>LCD<sp/>pluged<sp/>int<sp/>uart1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lcdPrint(uart1,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;%c<sp/>%s&quot;</highlight><highlight class="normal">,<sp/><ref refid="_l_c_d_menu_settings_8h_1a2c102896ee47dd44741370e73197e3e8" kindref="member">LCD_POINTER_CHAR</ref>,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LCDMenuItems[i].LCDText);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>there<sp/>is<sp/>more<sp/>than<sp/>one<sp/>item<sp/>and<sp/>the<sp/>last<sp/>item<sp/>isn&apos;t<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//current<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(numOfItems<sp/>&gt;<sp/>1<sp/>&amp;&amp;<sp/>i<sp/>!=<sp/>numOfItems-1)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//display<sp/>the<sp/>next<sp/>selection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lcdPrint(uart1,<sp/>2,<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/>%s&quot;</highlight><highlight class="normal">,<sp/>LCDMenuItems[i+1].LCDText);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lcdSetText(uart1,<sp/>2,<sp/>NULL);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>the<sp/>selection<sp/>range<sp/>for<sp/>i+1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_l_c_d_menu_8c_1a150b832a40f6314f42b950b648def568" kindref="member">selectionRangeLower</ref><sp/>=<sp/><ref refid="_l_c_d_menu_8c_1a3b97dc91b74de0462b8192c4e0838afb" kindref="member">selectionRangeUpper</ref>;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_l_c_d_menu_8c_1a3b97dc91b74de0462b8192c4e0838afb" kindref="member">selectionRangeUpper</ref><sp/>+=<sp/><ref refid="_l_c_d_menu_8c_1ae9f8e66da4e3357d519b755382d55c0d" kindref="member">potSelectionSize</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delay(20);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_l_c_d_menu_8c_1aefa12ea894cc2907d17b17613b9b7165" kindref="member">newItem</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>itemText,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*itemFunction)())</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>numOfItems++;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>LCDMenuItems<sp/>=<sp/>realloc(LCDMenuItems,<sp/>numOfItems<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>*LCDMenuItems);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>LCDMenuItems[numOfItems-1].<ref refid="struct_l_c_d_item_1a3265d5a814cae9c1ce47d7e878c45c64" kindref="member">LCDText</ref><sp/>=<sp/>itemText;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>LCDMenuItems[numOfItems-1].<ref refid="struct_l_c_d_item_1a92c749b399f1281b6a38296730befc65" kindref="member">function</ref><sp/>=<sp/>itemFunction;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="_l_c_d_menu_8c_1ae9f8e66da4e3357d519b755382d55c0d" kindref="member">potSelectionSize</ref><sp/>=<sp/>4095<sp/>/<sp/><ref refid="_l_c_d_menu_8c_1ad8e669786e82f68cebcd456c638cfc14" kindref="member">numOfItems</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/LCDMenu.c"/>
  </compounddef>
</doxygen>
